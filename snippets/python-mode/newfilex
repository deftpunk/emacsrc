# -*- mode: snippet -*-
# name: newfilex
# key: newfilex
# --
#!/usr/bin/env python

import argparse
import logging
import time


def main():
    """ The main script function. """
    $0
    pass

if __name__ == '__main__':

    lname = "$1"
    p = argparse.ArgumentParser(formatter_class=argparse.RawTextHelpFormatter,
                                description="""

Some useful description

    """,
                                epilog="""

Usage examples:

  BLah blah blah.
    =>  ./user_aside_perf.py --file candied-perf-data.yaml --asides systems radius

      """)

    p.add_argument("--logfile", dest="logfile_prefix", default=lname,
                   help="Specifiy an alternate logging file prefix [{}].".format(lname))
    p.add_argument("--no-debug", dest="logging_debug", action="store_false",
                   help="Don't print out logging debug messages.")

    opts = p.parse_args()

    ## Configure logging - log to console and to file.
    log = logging.getLogger()
    logname = opts.logfile_prefix+'-'+time.strftime("%m-%d-%Y_%H:%M:%S")+".log"

    if opts.logging_debug:
        log.setLevel(logging.DEBUG)
    else:
        log.setLevel(logging.INFO)

    shandler = logging.StreamHandler()
    shandler.setFormatter(logging.Formatter('%(message)s'))
    fhandler = logging.FileHandler(logname)
    fhandler.setFormatter(logging.Formatter('%(asctime)s - %(levelname)s: %(message)s'))

    log.addHandler(shandler)
    log.addHandler(fhandler)

    ## Some preliminaries.
    log.debug("log file: {}".format(logname))


    main()
