;;-*-coding: utf-8;-*-
(define-abbrev-table 'global-abbrev-table
  '(
    ("'defualt" "default" nil :count 1)
    ("Jumpcloud" "JumpCloud" nil :count 5)
    ("acroos" "across" nil :count 1)
    ("addign" "adding" nil :count 1)
    ("addtion" "addition" nil :count 1)
    ("adimn" "admin" nil :count 1)
    ("ading" "adding" nil :count 1)
    ("adn" "and" nil :count 1)
    ("associatins" "associations" nil :count 1)
    ("avaoid" "avoid" nil :count 1)
    ("bidn" "Bind" nil :count 1)
    ("bidnign" "binding" nil :count 1)
    ("bidning" "binding" nil :count 2)
    ("bidnings" "bindings" nil :count 1)
    ("bindign" "binding" nil :count 1)
    ("bindigns" "bindings" nil :count 1)
    ("blessigns" "blessings" nil :count 1)
    ("boulder" "Boulder" nil :count 1)
    ("buyt" "but" nil :count 1)
    ("cathing" "catching" nil :count 1)
    ("chanigng" "changing" nil :count 1)
    ("chaning" "changing" nil :count 1)
    ("chekign" "checking" nil :count 1)
    ("colleciton" "collection" nil :count 1)
    ("commetn" "comment" nil :count 1)
    ("contianer" "container" nil :count 4)
    ("contianing" "containing" nil :count 1)
    ("contorl" "control" nil :count 1)
    ("defualt" "default" nil :count 1)
    ("deletign" "Deleting" nil :count 1)
    ("develp" "develop" nil :count 1)
    ("dleete" "" nil :count 1)
    ("docstrting" "docstring" nil :count 1)
    ("dont" "don't" nil :count 8)
    ("eidt" "edit" nil :count 1)
    ("embarassing" "embarrassing" nil :count 1)
    ("emial" "Email" nil :count 1)
    ("environemnt" "environment" nil :count 1)
    ("excpet" "except" nil :count 1)
    ("executeable" "executable" nil :count 1)
    ("expecitng" "expecting" nil :count 1)
    ("ffloat" "float" nil :count 1)
    ("fial" "fail" nil :count 1)
    ("fialure" "failure" nil :count 1)
    ("fiels" "files" nil :count 1)
    ("fixign" "fixing" nil :count 1)
    ("follwoing" "following" nil :count 1)
    ("fro" "for" nil :count 4)
    ("funcion" "function" nil :count 1)
    ("funcitons" "functions" nil :count 1)
    ("fwe" "few" nil :count 1)
    ("gaurantee" "guarantee" nil :count 0)
    ("goest" "" nil :count 1)
    ("goole" "google" nil :count 1)
    ("handlign" "handling" nil :count 1)
    ("hcack" "hack" nil :count 1)
    ("highlihgt" "Highlight" nil :count 1)
    ("hte" "the" nil :count 2)
    ("ifnd" "find" nil :count 1)
    ("ignorign" "ignoring" nil :count 1)
    ("imoprt" "import" nil :count 1)
    ("improt" "import" nil :count 1)
    ("improvements" "improvements" nil :count 2)
    ("ineracting" "interacting" nil :count 1)
    ("iwht" "with" nil :count 1)
    ("iwll" "will" nil :count 1)
    ("iwth" "with" nil :count 1)
    ("jumplcoud" "jumpcloud" nil :count 2)
    ("levelign" "leveling" nil :count 1)
    ("loook" "Look" nil :count 1)
    ("lsit" "list" nil :count 1)
    ("ltos" "lots" nil :count 1)
    ("mappigns" "mappings" nil :count 1)
    ("mde" "mode" nil :count 1)
    ("mdoe" "mode" nil :count 1)
    ("messign" "messing" nil :count 1)
    ("miliseconds" "milliseconds" nil :count 2)
    ("mofing" "moving" nil :count 1)
    ("movign" "moving" nil :count 1)
    ("mroe" "more" nil :count 1)
    ("mssing" "missing" nil :count 1)
    ("myslef" "myself" nil :count 2)
    ("naything" "anything" nil :count 1)
    ("netowrk" "network" nil :count 1)
    ("nto" "not" nil :count 3)
    ("nubers" "numbers" nil :count 1)
    ("ofthe" "of the" nil :count 2)
    ("openiong" "opening" nil :count 1)
    ("ot" "to" nil :count 9)
    ("pelase" "please" nil :count 1)
    ("pirnt" "print" nil :count 3)
    ("plya" "play" nil :count 1)
    ("probelm" "problem" nil :count 1)
    ("probrelms" "problems" nil :count 1)
    ("pyhton" "python" nil :count 2)
    ("rasie" "raise" nil :count 2)
    ("readem" "README" nil :count 2)
    ("recieved" "received" nil :count 1)
    ("redeploy" "re-deploy" nil :count 1)
    ("redploy" "redeploy" nil :count 1)
    ("refressh" "refresh" nil :count 1)
    ("remving" "removing" nil :count 1)
    ("resutl" "result" nil :count 1)
    ("retrun" "return" nil :count 7)
    ("rsults" "results" nil :count 1)
    ("runnign" "running" nil :count 1)
    ("scaffoldign" "scaffolding" nil :count 1)
    ("scoket" "socket" nil :count 1)
    ("scrifice" "sacrifice" nil :count 1)
    ("scritp" "script" nil :count 1)
    ("scritps" "scripts" nil :count 1)
    ("sincle" "Single" nil :count 1)
    ("slef" "self" nil :count 6)
    ("sliem" "slime" nil :count 1)
    ("soem" "some" nil :count 1)
    ("soemtimes" "sometimes" nil :count 1)
    ("somethign" "something" nil :count 1)
    ("somthing" "something" nil :count 1)
    ("stewardshiip" "stewardship" nil :count 1)
    ("stupd" "stupid" nil :count 1)
    ("taht" "that" nil :count 3)
    ("tath" "that" nil :count 1)
    ("teh" "the" nil :count 11)
    ("theat" "that" nil :count 1)
    ("thigns" "things" nil :count 1)
    ("thne" "then" nil :count 1)
    ("thta" "that" nil :count 2)
    ("thtat" "that" nil :count 1)
    ("timeazone" "timezone" nil :count 1)
    ("togehter" "together" nil :count 1)
    ("trbouble" "trouble" nil :count 1)
    ("trbouleshooting" "Troubleshooting" nil :count 1)
    ("trhough" "through" nil :count 1)
    ("ture" "True" nil :count 1)
    ("tweakign" "tweaking" nil :count 1)
    ("upate" "update" nil :count 1)
    ("vinding" "binding" nil :count 1)
    ("wehn" "when" nil :count 1)
    ("weill" "will" nil :count 1)
    ("whilre" "while" nil :count 1)
    ("widnow" "window" nil :count 1)
    ("witeness" "witness" nil :count 1)
    ("workign" "working" nil :count 1)
    ("wyh" "why" nil :count 1)
   ))

(define-abbrev-table 'org-mode-abbrev-table
  '(
    ("conidisd" "Consider" nil :count 0)
   ))

(define-abbrev-table 'python-mode-abbrev-table
  '(
    ("sysx" "import sys; sys.exit(-1)" nil :count 1)
   ))

(define-abbrev-table 'text-mode-abbrev-table
  '(
    ("formating" "formatting" nil :count 0)
   ))

